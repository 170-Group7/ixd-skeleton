/*! @name videojs-hls-stream-selector @version 0.1.0 @license MIT */
(function (QUnit, sinon, videojs) {
	'use strict';

	QUnit = QUnit && QUnit.hasOwnProperty('default') ? QUnit['default'] : QUnit;
	sinon = sinon && sinon.hasOwnProperty('default') ? sinon['default'] : sinon;
	videojs = videojs && videojs.hasOwnProperty('default') ? videojs['default'] : videojs;

	var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

	var minDoc = {};

	var topLevel = typeof commonjsGlobal !== 'undefined' ? commonjsGlobal :
	    typeof window !== 'undefined' ? window : {};


	var doccy;

	if (typeof document !== 'undefined') {
	    doccy = document;
	} else {
	    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];

	    if (!doccy) {
	        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;
	    }
	}

	var document_1 = doccy;

	function _inheritsLoose(subClass, superClass) {
	  subClass.prototype = Object.create(superClass.prototype);
	  subClass.prototype.constructor = subClass;
	  subClass.__proto__ = superClass;
	}

	var version = "0.1.0";

	var cov_2qiuixiszq = function () {
	  var path = "/Users/sebastian/Source/videojs-hls-stream-selector/src/MenuItem.js",
	      hash = "88583d72ad144b7afa08d2a2282684c19dfa6e5d",
	      Function = function () {}.constructor,
	      global = new Function('return this')(),
	      gcv = "__coverage__",
	      coverageData = {
	    path: "/Users/sebastian/Source/videojs-hls-stream-selector/src/MenuItem.js",
	    statementMap: {
	      "0": {
	        start: {
	          line: 3,
	          column: 17
	        },
	        end: {
	          line: 3,
	          column: 49
	        }
	      },
	      "1": {
	        start: {
	          line: 7,
	          column: 16
	        },
	        end: {
	          line: 7,
	          column: 18
	        }
	      },
	      "2": {
	        start: {
	          line: 9,
	          column: 4
	        },
	        end: {
	          line: 11,
	          column: 5
	        }
	      },
	      "3": {
	        start: {
	          line: 10,
	          column: 6
	        },
	        end: {
	          line: 10,
	          column: 69
	        }
	      },
	      "4": {
	        start: {
	          line: 13,
	          column: 4
	        },
	        end: {
	          line: 17,
	          column: 7
	        }
	      },
	      "5": {
	        start: {
	          line: 19,
	          column: 4
	        },
	        end: {
	          line: 19,
	          column: 17
	        }
	      },
	      "6": {
	        start: {
	          line: 20,
	          column: 4
	        },
	        end: {
	          line: 20,
	          column: 31
	        }
	      },
	      "7": {
	        start: {
	          line: 24,
	          column: 4
	        },
	        end: {
	          line: 24,
	          column: 75
	        }
	      }
	    },
	    fnMap: {
	      "0": {
	        name: "(anonymous_0)",
	        decl: {
	          start: {
	            line: 6,
	            column: 2
	          },
	          end: {
	            line: 6,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 6,
	            column: 41
	          },
	          end: {
	            line: 21,
	            column: 3
	          }
	        },
	        line: 6
	      },
	      "1": {
	        name: "(anonymous_1)",
	        decl: {
	          start: {
	            line: 23,
	            column: 2
	          },
	          end: {
	            line: 23,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 23,
	            column: 16
	          },
	          end: {
	            line: 25,
	            column: 3
	          }
	        },
	        line: 23
	      }
	    },
	    branchMap: {
	      "0": {
	        loc: {
	          start: {
	            line: 9,
	            column: 4
	          },
	          end: {
	            line: 11,
	            column: 5
	          }
	        },
	        type: "if",
	        locations: [{
	          start: {
	            line: 9,
	            column: 4
	          },
	          end: {
	            line: 11,
	            column: 5
	          }
	        }, {
	          start: {
	            line: 9,
	            column: 4
	          },
	          end: {
	            line: 11,
	            column: 5
	          }
	        }],
	        line: 9
	      }
	    },
	    s: {
	      "0": 0,
	      "1": 0,
	      "2": 0,
	      "3": 0,
	      "4": 0,
	      "5": 0,
	      "6": 0,
	      "7": 0
	    },
	    f: {
	      "0": 0,
	      "1": 0
	    },
	    b: {
	      "0": [0, 0]
	    },
	    _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"
	  },
	      coverage = global[gcv] || (global[gcv] = {});

	  if (coverage[path] && coverage[path].hash === hash) {
	    return coverage[path];
	  }

	  coverageData.hash = hash;
	  return coverage[path] = coverageData;
	}();
	var MenuItem = (cov_2qiuixiszq.s[0]++, videojs.getComponent("MenuItem"));

	var _default =
	/*#__PURE__*/
	function (_MenuItem) {
	  _inheritsLoose(_default, _MenuItem);

	  function _default(player, _ref) {
	    var _this;

	    var id = _ref.id,
	        bandwidth = _ref.bandwidth;
	    cov_2qiuixiszq.f[0]++;
	    var label = (cov_2qiuixiszq.s[1]++, id);
	    cov_2qiuixiszq.s[2]++;

	    if (bandwidth) {
	      cov_2qiuixiszq.b[0][0]++;
	      cov_2qiuixiszq.s[3]++;
	      label = parseFloat((bandwidth / 1000000).toFixed(1)) + " mbps";
	    } else {
	      cov_2qiuixiszq.b[0][1]++;
	    }

	    cov_2qiuixiszq.s[4]++;
	    _this = _MenuItem.call(this, player, {
	      label: label,
	      selectable: true,
	      selected: false
	    }) || this;
	    cov_2qiuixiszq.s[5]++;
	    _this.id = id;
	    cov_2qiuixiszq.s[6]++;
	    _this.bandwidth = bandwidth;
	    return _this;
	  }

	  var _proto = _default.prototype;

	  _proto.handleClick = function handleClick() {
	    cov_2qiuixiszq.f[1]++;
	    cov_2qiuixiszq.s[7]++;
	    this.player().hlsStreamSelector().setState({
	      currentItemId: this.id
	    });
	  };

	  return _default;
	}(MenuItem);

	var cov_1vkylalaor = function () {
	  var path = "/Users/sebastian/Source/videojs-hls-stream-selector/src/MenuButton.js",
	      hash = "01d5fff299b97dba86e74e83446a17add56c4a84",
	      Function = function () {}.constructor,
	      global = new Function('return this')(),
	      gcv = "__coverage__",
	      coverageData = {
	    path: "/Users/sebastian/Source/videojs-hls-stream-selector/src/MenuButton.js",
	    statementMap: {
	      "0": {
	        start: {
	          line: 5,
	          column: 19
	        },
	        end: {
	          line: 5,
	          column: 53
	        }
	      },
	      "1": {
	        start: {
	          line: 9,
	          column: 4
	        },
	        end: {
	          line: 9,
	          column: 40
	        }
	      },
	      "2": {
	        start: {
	          line: 12,
	          column: 4
	        },
	        end: {
	          line: 12,
	          column: 32
	        }
	      },
	      "3": {
	        start: {
	          line: 15,
	          column: 4
	        },
	        end: {
	          line: 15,
	          column: 52
	        }
	      },
	      "4": {
	        start: {
	          line: 18,
	          column: 4
	        },
	        end: {
	          line: 18,
	          column: 66
	        }
	      },
	      "5": {
	        start: {
	          line: 21,
	          column: 4
	        },
	        end: {
	          line: 21,
	          column: 32
	        }
	      },
	      "6": {
	        start: {
	          line: 24,
	          column: 4
	        },
	        end: {
	          line: 30,
	          column: 9
	        }
	      },
	      "7": {
	        start: {
	          line: 27,
	          column: 8
	        },
	        end: {
	          line: 29,
	          column: 9
	        }
	      },
	      "8": {
	        start: {
	          line: 28,
	          column: 10
	        },
	        end: {
	          line: 28,
	          column: 56
	        }
	      },
	      "9": {
	        start: {
	          line: 34,
	          column: 28
	        },
	        end: {
	          line: 36,
	          column: 28
	        }
	      },
	      "10": {
	        start: {
	          line: 39,
	          column: 18
	        },
	        end: {
	          line: 52,
	          column: 48
	        }
	      },
	      "11": {
	        start: {
	          line: 42,
	          column: 10
	        },
	        end: {
	          line: 43,
	          column: 15
	        }
	      },
	      "12": {
	        start: {
	          line: 42,
	          column: 45
	        },
	        end: {
	          line: 42,
	          column: 72
	        }
	      },
	      "13": {
	        start: {
	          line: 47,
	          column: 10
	        },
	        end: {
	          line: 50,
	          column: 12
	        }
	      },
	      "14": {
	        start: {
	          line: 52,
	          column: 22
	        },
	        end: {
	          line: 52,
	          column: 47
	        }
	      },
	      "15": {
	        start: {
	          line: 55,
	          column: 4
	        },
	        end: {
	          line: 61,
	          column: 5
	        }
	      },
	      "16": {
	        start: {
	          line: 56,
	          column: 6
	        },
	        end: {
	          line: 60,
	          column: 8
	        }
	      },
	      "17": {
	        start: {
	          line: 63,
	          column: 4
	        },
	        end: {
	          line: 63,
	          column: 17
	        }
	      },
	      "18": {
	        start: {
	          line: 68,
	          column: 4
	        },
	        end: {
	          line: 68,
	          column: 64
	        }
	      },
	      "19": {
	        start: {
	          line: 68,
	          column: 33
	        },
	        end: {
	          line: 68,
	          column: 62
	        }
	      },
	      "20": {
	        start: {
	          line: 71,
	          column: 4
	        },
	        end: {
	          line: 74,
	          column: 69
	        }
	      },
	      "21": {
	        start: {
	          line: 74,
	          column: 24
	        },
	        end: {
	          line: 74,
	          column: 67
	        }
	      }
	    },
	    fnMap: {
	      "0": {
	        name: "(anonymous_0)",
	        decl: {
	          start: {
	            line: 8,
	            column: 2
	          },
	          end: {
	            line: 8,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 8,
	            column: 22
	          },
	          end: {
	            line: 31,
	            column: 3
	          }
	        },
	        line: 8
	      },
	      "1": {
	        name: "(anonymous_1)",
	        decl: {
	          start: {
	            line: 26,
	            column: 26
	          },
	          end: {
	            line: 26,
	            column: 27
	          }
	        },
	        loc: {
	          start: {
	            line: 26,
	            column: 43
	          },
	          end: {
	            line: 30,
	            column: 7
	          }
	        },
	        line: 26
	      },
	      "2": {
	        name: "(anonymous_2)",
	        decl: {
	          start: {
	            line: 33,
	            column: 2
	          },
	          end: {
	            line: 33,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 33,
	            column: 16
	          },
	          end: {
	            line: 64,
	            column: 3
	          }
	        },
	        line: 33
	      },
	      "3": {
	        name: "(anonymous_3)",
	        decl: {
	          start: {
	            line: 41,
	            column: 8
	          },
	          end: {
	            line: 41,
	            column: 9
	          }
	        },
	        loc: {
	          start: {
	            line: 42,
	            column: 10
	          },
	          end: {
	            line: 43,
	            column: 15
	          }
	        },
	        line: 42
	      },
	      "4": {
	        name: "(anonymous_4)",
	        decl: {
	          start: {
	            line: 42,
	            column: 36
	          },
	          end: {
	            line: 42,
	            column: 37
	          }
	        },
	        loc: {
	          start: {
	            line: 42,
	            column: 45
	          },
	          end: {
	            line: 42,
	            column: 72
	          }
	        },
	        line: 42
	      },
	      "5": {
	        name: "(anonymous_5)",
	        decl: {
	          start: {
	            line: 46,
	            column: 8
	          },
	          end: {
	            line: 46,
	            column: 9
	          }
	        },
	        loc: {
	          start: {
	            line: 47,
	            column: 10
	          },
	          end: {
	            line: 50,
	            column: 12
	          }
	        },
	        line: 47
	      },
	      "6": {
	        name: "(anonymous_6)",
	        decl: {
	          start: {
	            line: 52,
	            column: 12
	          },
	          end: {
	            line: 52,
	            column: 13
	          }
	        },
	        loc: {
	          start: {
	            line: 52,
	            column: 22
	          },
	          end: {
	            line: 52,
	            column: 47
	          }
	        },
	        line: 52
	      },
	      "7": {
	        name: "(anonymous_7)",
	        decl: {
	          start: {
	            line: 66,
	            column: 2
	          },
	          end: {
	            line: 66,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 66,
	            column: 21
	          },
	          end: {
	            line: 75,
	            column: 3
	          }
	        },
	        line: 66
	      },
	      "8": {
	        name: "(anonymous_8)",
	        decl: {
	          start: {
	            line: 68,
	            column: 23
	          },
	          end: {
	            line: 68,
	            column: 24
	          }
	        },
	        loc: {
	          start: {
	            line: 68,
	            column: 33
	          },
	          end: {
	            line: 68,
	            column: 62
	          }
	        },
	        line: 68
	      },
	      "9": {
	        name: "(anonymous_9)",
	        decl: {
	          start: {
	            line: 74,
	            column: 15
	          },
	          end: {
	            line: 74,
	            column: 16
	          }
	        },
	        loc: {
	          start: {
	            line: 74,
	            column: 24
	          },
	          end: {
	            line: 74,
	            column: 67
	          }
	        },
	        line: 74
	      }
	    },
	    branchMap: {
	      "0": {
	        loc: {
	          start: {
	            line: 27,
	            column: 8
	          },
	          end: {
	            line: 29,
	            column: 9
	          }
	        },
	        type: "if",
	        locations: [{
	          start: {
	            line: 27,
	            column: 8
	          },
	          end: {
	            line: 29,
	            column: 9
	          }
	        }, {
	          start: {
	            line: 27,
	            column: 8
	          },
	          end: {
	            line: 29,
	            column: 9
	          }
	        }],
	        line: 27
	      },
	      "1": {
	        loc: {
	          start: {
	            line: 27,
	            column: 12
	          },
	          end: {
	            line: 27,
	            column: 44
	          }
	        },
	        type: "binary-expr",
	        locations: [{
	          start: {
	            line: 27,
	            column: 12
	          },
	          end: {
	            line: 27,
	            column: 19
	          }
	        }, {
	          start: {
	            line: 27,
	            column: 23
	          },
	          end: {
	            line: 27,
	            column: 44
	          }
	        }],
	        line: 27
	      },
	      "2": {
	        loc: {
	          start: {
	            line: 55,
	            column: 4
	          },
	          end: {
	            line: 61,
	            column: 5
	          }
	        },
	        type: "if",
	        locations: [{
	          start: {
	            line: 55,
	            column: 4
	          },
	          end: {
	            line: 61,
	            column: 5
	          }
	        }, {
	          start: {
	            line: 55,
	            column: 4
	          },
	          end: {
	            line: 61,
	            column: 5
	          }
	        }],
	        line: 55
	      },
	      "3": {
	        loc: {
	          start: {
	            line: 74,
	            column: 36
	          },
	          end: {
	            line: 74,
	            column: 66
	          }
	        },
	        type: "binary-expr",
	        locations: [{
	          start: {
	            line: 74,
	            column: 36
	          },
	          end: {
	            line: 74,
	            column: 49
	          }
	        }, {
	          start: {
	            line: 74,
	            column: 53
	          },
	          end: {
	            line: 74,
	            column: 66
	          }
	        }],
	        line: 74
	      }
	    },
	    s: {
	      "0": 0,
	      "1": 0,
	      "2": 0,
	      "3": 0,
	      "4": 0,
	      "5": 0,
	      "6": 0,
	      "7": 0,
	      "8": 0,
	      "9": 0,
	      "10": 0,
	      "11": 0,
	      "12": 0,
	      "13": 0,
	      "14": 0,
	      "15": 0,
	      "16": 0,
	      "17": 0,
	      "18": 0,
	      "19": 0,
	      "20": 0,
	      "21": 0
	    },
	    f: {
	      "0": 0,
	      "1": 0,
	      "2": 0,
	      "3": 0,
	      "4": 0,
	      "5": 0,
	      "6": 0,
	      "7": 0,
	      "8": 0,
	      "9": 0
	    },
	    b: {
	      "0": [0, 0],
	      "1": [0, 0],
	      "2": [0, 0],
	      "3": [0, 0]
	    },
	    _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"
	  },
	      coverage = global[gcv] || (global[gcv] = {});

	  if (coverage[path] && coverage[path].hash === hash) {
	    return coverage[path];
	  }

	  coverageData.hash = hash;
	  return coverage[path] = coverageData;
	}();
	var MenuButton = (cov_1vkylalaor.s[0]++, videojs.getComponent("MenuButton"));

	var _default$1 =
	/*#__PURE__*/
	function (_MenuButton) {
	  _inheritsLoose(_default$1, _MenuButton);

	  function _default$1(player) {
	    var _this;

	    cov_1vkylalaor.f[0]++;
	    cov_1vkylalaor.s[1]++;
	    _this = _MenuButton.call(this, player, {
	      title: "Quality"
	    }) || this;
	    cov_1vkylalaor.s[2]++;

	    _this.controlText("Quality");

	    cov_1vkylalaor.s[3]++;

	    _this.addClass("vjs-hls-stream-selector-button");

	    cov_1vkylalaor.s[4]++;

	    _this.$(".vjs-icon-placeholder").classList.add("vjs-icon-cog");

	    cov_1vkylalaor.s[5]++;

	    _this.setCurrentItem("auto");

	    cov_1vkylalaor.s[6]++;

	    _this.player().hlsStreamSelector().on("statechanged", function (_ref) {
	      var changes = _ref.changes;
	      cov_1vkylalaor.f[1]++;
	      cov_1vkylalaor.s[7]++;

	      if ((cov_1vkylalaor.b[1][0]++, changes) && (cov_1vkylalaor.b[1][1]++, changes.currentItemId)) {
	        cov_1vkylalaor.b[0][0]++;
	        cov_1vkylalaor.s[8]++;

	        _this.setCurrentItem(changes.currentItemId.to);
	      } else {
	        cov_1vkylalaor.b[0][1]++;
	      }
	    });

	    return _this;
	  }

	  var _proto = _default$1.prototype;

	  _proto.createItems = function createItems() {
	    var _this2 = this;

	    cov_1vkylalaor.f[2]++;
	    var representations = (cov_1vkylalaor.s[9]++, this.player().tech({
	      IWillNotUseThisInPlugins: true
	    }).vhs.representations());
	    var items = (cov_1vkylalaor.s[10]++, representations.filter(function (_ref2, index) {
	      var bandwidth = _ref2.bandwidth;
	      cov_1vkylalaor.f[3]++;
	      cov_1vkylalaor.s[11]++;
	      return representations.findIndex(function (rep) {
	        cov_1vkylalaor.f[4]++;
	        cov_1vkylalaor.s[12]++;
	        return rep.bandwidth === bandwidth;
	      }) === index;
	    }).map(function (_ref3) {
	      var id = _ref3.id,
	          bandwidth = _ref3.bandwidth;
	      cov_1vkylalaor.f[5]++;
	      cov_1vkylalaor.s[13]++;
	      return new _default(_this2.player(), {
	        id: id,
	        bandwidth: bandwidth
	      });
	    }).sort(function (a, b) {
	      cov_1vkylalaor.f[6]++;
	      cov_1vkylalaor.s[14]++;
	      return b.bandwidth - a.bandwidth;
	    }));
	    cov_1vkylalaor.s[15]++;

	    if (items.length > 1) {
	      cov_1vkylalaor.b[2][0]++;
	      cov_1vkylalaor.s[16]++;
	      items.push(new _default(this.player(), {
	        id: "auto"
	      }));
	    } else {
	      cov_1vkylalaor.b[2][1]++;
	    }

	    cov_1vkylalaor.s[17]++;
	    return items;
	  };

	  _proto.setCurrentItem = function setCurrentItem(id) {
	    cov_1vkylalaor.f[7]++;
	    cov_1vkylalaor.s[18]++;
	    this.items.forEach(function (item) {
	      cov_1vkylalaor.f[8]++;
	      cov_1vkylalaor.s[19]++;
	      return item.selected(item.id === id);
	    });
	    cov_1vkylalaor.s[20]++;
	    this.player().tech({
	      IWillNotUseThisInPlugins: true
	    }).vhs.representations().forEach(function (rep) {
	      cov_1vkylalaor.f[9]++;
	      cov_1vkylalaor.s[21]++;
	      return rep.enabled((cov_1vkylalaor.b[3][0]++, id === "auto") || (cov_1vkylalaor.b[3][1]++, rep.id === id));
	    });
	  };

	  return _default$1;
	}(MenuButton);

	var cov_6217fes4z = function () {
	  var path = "/Users/sebastian/Source/videojs-hls-stream-selector/src/plugin.js",
	      hash = "61f6deadcef88f782da890584898baef8e5a3133",
	      Function = function () {}.constructor,
	      global = new Function('return this')(),
	      gcv = "__coverage__",
	      coverageData = {
	    path: "/Users/sebastian/Source/videojs-hls-stream-selector/src/plugin.js",
	    statementMap: {
	      "0": {
	        start: {
	          line: 6,
	          column: 15
	        },
	        end: {
	          line: 6,
	          column: 42
	        }
	      },
	      "1": {
	        start: {
	          line: 9,
	          column: 17
	        },
	        end: {
	          line: 9,
	          column: 19
	        }
	      },
	      "2": {
	        start: {
	          line: 32,
	          column: 4
	        },
	        end: {
	          line: 32,
	          column: 18
	        }
	      },
	      "3": {
	        start: {
	          line: 34,
	          column: 4
	        },
	        end: {
	          line: 34,
	          column: 59
	        }
	      },
	      "4": {
	        start: {
	          line: 36,
	          column: 4
	        },
	        end: {
	          line: 49,
	          column: 7
	        }
	      },
	      "5": {
	        start: {
	          line: 38,
	          column: 6
	        },
	        end: {
	          line: 48,
	          column: 7
	        }
	      },
	      "6": {
	        start: {
	          line: 40,
	          column: 8
	        },
	        end: {
	          line: 40,
	          column: 56
	        }
	      },
	      "7": {
	        start: {
	          line: 43,
	          column: 8
	        },
	        end: {
	          line: 47,
	          column: 10
	        }
	      },
	      "8": {
	        start: {
	          line: 54,
	          column: 0
	        },
	        end: {
	          line: 54,
	          column: 36
	        }
	      },
	      "9": {
	        start: {
	          line: 57,
	          column: 0
	        },
	        end: {
	          line: 57,
	          column: 36
	        }
	      },
	      "10": {
	        start: {
	          line: 60,
	          column: 0
	        },
	        end: {
	          line: 60,
	          column: 63
	        }
	      }
	    },
	    fnMap: {
	      "0": {
	        name: "(anonymous_0)",
	        decl: {
	          start: {
	            line: 30,
	            column: 2
	          },
	          end: {
	            line: 30,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 30,
	            column: 31
	          },
	          end: {
	            line: 50,
	            column: 3
	          }
	        },
	        line: 30
	      },
	      "1": {
	        name: "(anonymous_1)",
	        decl: {
	          start: {
	            line: 36,
	            column: 37
	          },
	          end: {
	            line: 36,
	            column: 38
	          }
	        },
	        loc: {
	          start: {
	            line: 36,
	            column: 43
	          },
	          end: {
	            line: 49,
	            column: 5
	          }
	        },
	        line: 36
	      }
	    },
	    branchMap: {
	      "0": {
	        loc: {
	          start: {
	            line: 38,
	            column: 6
	          },
	          end: {
	            line: 48,
	            column: 7
	          }
	        },
	        type: "if",
	        locations: [{
	          start: {
	            line: 38,
	            column: 6
	          },
	          end: {
	            line: 48,
	            column: 7
	          }
	        }, {
	          start: {
	            line: 38,
	            column: 6
	          },
	          end: {
	            line: 48,
	            column: 7
	          }
	        }],
	        line: 38
	      }
	    },
	    s: {
	      "0": 0,
	      "1": 0,
	      "2": 0,
	      "3": 0,
	      "4": 0,
	      "5": 0,
	      "6": 0,
	      "7": 0,
	      "8": 0,
	      "9": 0,
	      "10": 0
	    },
	    f: {
	      "0": 0,
	      "1": 0
	    },
	    b: {
	      "0": [0, 0]
	    },
	    _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"
	  },
	      coverage = global[gcv] || (global[gcv] = {});

	  if (coverage[path] && coverage[path].hash === hash) {
	    return coverage[path];
	  }

	  coverageData.hash = hash;
	  return coverage[path] = coverageData;
	}();
	var Plugin = (cov_6217fes4z.s[0]++, videojs.getPlugin("plugin"));
	var defaults = (cov_6217fes4z.s[1]++, {});

	var HlsStreamSelector =
	/*#__PURE__*/
	function (_Plugin) {
	  _inheritsLoose(HlsStreamSelector, _Plugin);

	  function HlsStreamSelector(player, options) {
	    var _this;

	    cov_6217fes4z.f[0]++;
	    cov_6217fes4z.s[2]++;
	    _this = _Plugin.call(this, player) || this;
	    cov_6217fes4z.s[3]++;
	    _this.options = videojs.mergeOptions(defaults, options);
	    cov_6217fes4z.s[4]++;

	    _this.player.on("loadedmetadata", function () {
	      cov_6217fes4z.f[1]++;
	      cov_6217fes4z.s[5]++;

	      if (_this.player.tech({
	        IWillNotUseThisInPlugins: true
	      }).vhs) {
	        cov_6217fes4z.b[0][0]++;
	        cov_6217fes4z.s[6]++;

	        _this.player.addClass("vjs-hls-stream-selector");

	        cov_6217fes4z.s[7]++;

	        _this.player.controlBar.addChild(new _default$1(_this.player), {}, _this.player.controlBar.children().length - 2);
	      } else {
	        cov_6217fes4z.b[0][1]++;
	      }
	    });

	    return _this;
	  }

	  return HlsStreamSelector;
	}(Plugin);

	cov_6217fes4z.s[8]++;
	HlsStreamSelector.defaultState = {};
	cov_6217fes4z.s[9]++;
	HlsStreamSelector.VERSION = version;
	cov_6217fes4z.s[10]++;
	videojs.registerPlugin("hlsStreamSelector", HlsStreamSelector);

	var Player = videojs.getComponent("Player");
	QUnit.test("the environment is sane", function (assert) {
	  assert.strictEqual(typeof Array.isArray, "function", "es5 exists");
	  assert.strictEqual(typeof sinon, "object", "sinon exists");
	  assert.strictEqual(typeof videojs, "function", "videojs exists");
	  assert.strictEqual(typeof HlsStreamSelector, "function", "plugin is a function");
	});
	QUnit.module("videojs-hls-stream-selector", {
	  beforeEach: function beforeEach() {
	    // Mock the environment's timers because certain things - particularly
	    // player readiness - are asynchronous in video.js 5. This MUST come
	    // before any player is created; otherwise, timers could get created
	    // with the actual timer methods!
	    this.clock = sinon.useFakeTimers();
	    this.fixture = document_1.getElementById("qunit-fixture");
	    this.video = document_1.createElement("video");
	    this.fixture.appendChild(this.video);
	    this.player = videojs(this.video);
	  },
	  afterEach: function afterEach() {
	    this.player.dispose();
	    this.clock.restore();
	  }
	}); // QUnit.test('registers itself with video.js', function(assert) {
	//   assert.expect(2);
	//   assert.strictEqual(
	//     typeof Player.prototype.hlsStreamSelector,
	//     'function',
	//     'videojs-hls-stream-selector plugin was registered'
	//   );
	//   this.player.hlsStreamSelector();
	//   // Tick the clock forward enough to trigger the player to be "ready".
	//   this.clock.tick(1);
	//   assert.ok(
	//     this.player.hasClass('vjs-hls-stream-selector'),
	//     'the plugin adds a class to the player'
	//   );
	// });

}(QUnit, sinon, videojs));
